Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
LOAD Example2.o
LOAD LED.o
LOAD delay.o
LOAD delay2.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x19e
 *(.vectors)
 .vectors       0x00000000       0x8c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000098        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000a0        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x000000a0                __vector_22
                0x000000a0                __vector_28
                0x000000a0                __vector_1
                0x000000a0                __vector_32
                0x000000a0                __vector_34
                0x000000a0                __vector_24
                0x000000a0                __vector_12
                0x000000a0                __bad_interrupt
                0x000000a0                __vector_6
                0x000000a0                __vector_31
                0x000000a0                __vector_3
                0x000000a0                __vector_23
                0x000000a0                __vector_30
                0x000000a0                __vector_25
                0x000000a0                __vector_11
                0x000000a0                __vector_13
                0x000000a0                __vector_17
                0x000000a0                __vector_19
                0x000000a0                __vector_7
                0x000000a0                __vector_27
                0x000000a0                __vector_5
                0x000000a0                __vector_33
                0x000000a0                __vector_4
                0x000000a0                __vector_9
                0x000000a0                __vector_2
                0x000000a0                __vector_21
                0x000000a0                __vector_15
                0x000000a0                __vector_29
                0x000000a0                __vector_8
                0x000000a0                __vector_26
                0x000000a0                __vector_14
                0x000000a0                __vector_10
                0x000000a0                __vector_16
                0x000000a0                __vector_18
                0x000000a0                __vector_20
 .text          0x000000a4       0x6a Example2.o
                0x000000a4                main
 .text          0x0000010e       0x10 LED.o
                0x0000010e                IO_init
 .text          0x0000011e       0x3e delay.o
                0x0000011e                delay_us
                0x00000132                delay_ms
 .text          0x0000015c       0x3e delay2.o
 .text          0x0000019a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                0x0000019a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000019a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                0x0000019a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000019a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
                0x0000019a                _exit
                0x0000019a                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000019a        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x0000019e                _etext = .

.data           0x00800100        0x0 load address 0x0000019e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 Example2.o
 .data          0x00800100        0x0 LED.o
 .data          0x00800100        0x0 delay.o
 .data          0x00800100        0x0 delay2.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800100        0x0 Example2.o
 .bss           0x00800100        0x0 LED.o
 .bss           0x00800100        0x0 delay.o
 .bss           0x00800100        0x0 delay2.o
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr51\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x0000019e                __data_load_start = LOADADDR (.data)
                0x0000019e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Example2.o
 .debug_aranges
                0x00000020       0x20 LED.o
 .debug_aranges
                0x00000040       0x20 delay.o
 .debug_aranges
                0x00000060       0x20 delay2.o

.debug_pubnames
                0x00000000       0x91
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b Example2.o
 .debug_pubnames
                0x0000001b       0x1e LED.o
 .debug_pubnames
                0x00000039       0x2c delay.o
 .debug_pubnames
                0x00000065       0x2c delay2.o

.debug_info     0x00000000      0x2e0
 *(.debug_info)
 .debug_info    0x00000000       0xc9 Example2.o
 .debug_info    0x000000c9       0x7d LED.o
 .debug_info    0x00000146       0xcd delay.o
 .debug_info    0x00000213       0xcd delay2.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1a9
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x59 Example2.o
 .debug_abbrev  0x00000059       0x4a LED.o
 .debug_abbrev  0x000000a3       0x83 delay.o
 .debug_abbrev  0x00000126       0x83 delay2.o

.debug_line     0x00000000      0x3c2
 *(.debug_line)
 .debug_line    0x00000000      0x175 Example2.o
 .debug_line    0x00000175       0xf4 LED.o
 .debug_line    0x00000269       0xac delay.o
 .debug_line    0x00000315       0xad delay2.o

.debug_frame    0x00000000       0xa0
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 Example2.o
 .debug_frame   0x00000020       0x20 LED.o
 .debug_frame   0x00000040       0x30 delay.o
 .debug_frame   0x00000070       0x30 delay2.o

.debug_str      0x00000000      0x100
 *(.debug_str)
 .debug_str     0x00000000       0xbc Example2.o
                                 0xf0 (size before relaxing)
 .debug_str     0x000000bc       0x11 LED.o
                                 0xc4 (size before relaxing)
 .debug_str     0x000000cd       0x27 delay.o
                                 0xd2 (size before relaxing)
 .debug_str     0x000000f4        0xc delay2.o
                                 0xd3 (size before relaxing)

.debug_loc      0x00000000      0x213
 *(.debug_loc)
 .debug_loc     0x00000000       0xf3 Example2.o
 .debug_loc     0x000000f3       0x90 delay.o
 .debug_loc     0x00000183       0x90 delay2.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Example2.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x60
 .debug_pubtypes
                0x00000000       0x1e Example2.o
 .debug_pubtypes
                0x0000001e       0x1e LED.o
 .debug_pubtypes
                0x0000003c       0x12 delay.o
 .debug_pubtypes
                0x0000004e       0x12 delay2.o
